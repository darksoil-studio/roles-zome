searchState.loadedDescShard("roles_integrity", 0, "Hardcoded admin role need for creating other roles\nInput structure for assigning roles\nLinkTypes available in the module\nInput structure for unassigning roles\nApp properties (progenitor info)\nInput structure for unassigning roles\nFinding the appropriate action for an action hash\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValidate function\nValidate that agents had acces to the role at the time of …\nValidate that agents had acces to the role at the time …\nChecking the membrane proof of joining agent\nValidating that the Agent had a claim of the ADMIN_ROLE in …\nAllRoleClaimsDeletedProof struct\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nValidate the deletion of an AllRoleClaimsDeletedProof\nValidate the update of an AllRoleClaimsDeletedProof\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValidates links created for unassignments pending (agents …\nValidates deletions of the pending unassignment links …\nReturns progenitors\nValidate that agents had acces to the role at the time of …\nValidate the creation of a role claim for an agent\nValidates deletions of the AgentRoleClaim links\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValidation of the link that assignees use to claim roles, …\nGenerate the all_roles path\nGenerate the base address for a role based on path\nGenerate the path to role (from all_roles)\nValidate the creation correct link paths for role links\nValidate the path of delete links")